 //事故救援 路径规划
    $("#event_rescue_route").click(function () {
        if (!Robin.Portal.Event.curEventItem) {
            noty({ text: "事故信息不存在!", type: "error", layout: "topCenter", timeout: 1000 });
            return;
        }
        //清空救援路线
        Robin.Map.ClearLayer(Robin.Map.Map2DControl, Robin.Setting.MapAnalyse.route.rescueLayerName);
        NProgress.start();

        var eventItem = Robin.Portal.Event.curEventItem;
        var accidentCode = eventItem.ACCIDENTCODE;
        var graphicLayerName = Robin.Setting.MapAnalyse.route.rescueLayerName;

        var config = {
            graphicLayerName: graphicLayerName,
            color: "#ff0000",
            pic: "../images/Map/filled-arrow-green-red.png"
        }

        //handler 同时返回关联的救援队伍和路障列表

        //noty提示
        $.ajax({
            type: "post",
            url: "Dispatching/Handler.ashx?Action=GetAccidentLinkBarriersAndTeams&AccidentCode=" + accidentCode,
            dataType: "json",
            success: function (result) {
                //存储路障信息
                var barrierPathArray = [];
                var teamArray = [];

                var xMax = eventItem.X;
                var xMin = eventItem.X;
                var yMax = eventItem.Y;
                var yMin = eventItem.Y;

                if (result.AccidentLinkBarriersList.length > 0) {
                    barriesData = result.AccidentLinkBarriersList;
                    $.each(result.AccidentLinkBarriersList, function (j, v) {
                        var path = jQuery.parseJSON(v.BARRIERSCOORD);
                        barrierPathArray.push(path);
                    });
                }
                if (result.TeamList.length > 0) {
                    var graphic = new Array(result.TeamList.length);//用来保存结果路径图形,路径序号和ul中的index一一对应，单击选取高亮

                    var column = "<ul class='routeResult'><li>救援队伍名称</li><li>救援路径长度(千米)</li><li>负责人</li><li>联系电话</li></ul>";
                    $("#tab_rescue").html(column);
                    $.each(result.TeamList, function (j, v) {
                        var length;
                        if (v.X && v.Y) {
                            Emergency.Map.Route.arrowRoute(v.X, v.Y, eventItem.X, eventItem.Y, barrierPathArray, config, function (solveResult) {
                                graphic[j] = solveResult.routeResults[0].route;
                                var length = solveResult.routeResults[0].directions.totalLength;//路径长度
                                var data = Robin.Portal.Event.showRouteResult("rescue", v, length, j, v.X, eventItem.X, v.Y, eventItem.Y);
                                $(data).appendTo("#tab_rescue");
                            });
                            xMax = Math.max(v.X, xMax);
                            xMin = Math.min(v.X, xMin);
                            yMax = Math.max(v.Y, yMax);
                            yMin = Math.min(v.Y, yMin);
                        }
                        else {
                            noty({ text: "请配置救援队伍【" + v.TEAMNAME + "】的坐标信息", type: "warning", layout: "topCenter", timeout: 1000 });
                        }
                    });

                    $(document).off("click", "#tab_rescue ul").on("click", "#tab_rescue ul", function () {
                        if ($(this).prev().length != 0) {
                            Emergency.Map.MapTool.zoomToGeometry(parseFloat($(this).attr("xmin")), parseFloat($(this).attr("xmax")), parseFloat($(this).attr("ymin")), parseFloat($(this).attr("ymax")));
                            var index = $(this).attr("index");
                            require([
                                "esri/symbols/SimpleLineSymbol", "esri/Color"
                            ], function (SimpleLineSymbol, Color) {
                                Robin.Map.ClearLayer(Robin.Map.Map2DControl, Robin.Setting.MapAnalyse.route.highlightLayerName);
                                var highlightGraphicLayer = Robin.Map.GetGraphicLayer(Robin.Map.Map2DControl, Robin.Setting.MapAnalyse.route.highlightLayerName);//高亮路径显示图层
                                var routeSymbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([82, 152, 255, 1]), 5);
                                graphic[index].setSymbol(routeSymbol);
                                highlightGraphicLayer.add(graphic[index]);

                                //连接路线起点、终点与对应定位起点、终点
                                var paths = graphic[index].geometry.paths[0];
                                var routeStr = paths[0];
                                var routeEnd = paths[paths.length - 1];

                                var routeStrline = new esri.geometry.Polyline([[result.TeamList[index].X, result.TeamList[index].Y], routeStr], new esri.SpatialReference({ wkid: Robin.Setting.GlobalSetting.wkid }));
                                var routeEndline = new esri.geometry.Polyline([[eventItem.X, eventItem.Y], routeEnd], new esri.SpatialReference({ wkid: Robin.Setting.GlobalSetting.wkid }));
                                var strlinegraphic = new esri.Graphic(routeStrline, routeSymbol);
                                var endlinegraphic = new esri.Graphic(routeEndline, routeSymbol);

                                highlightGraphicLayer.add(strlinegraphic);
                                highlightGraphicLayer.add(endlinegraphic);
                            });
                        };
                    });
                }
                else {
                    noty({ text: "当前事故未关联救援队伍", type: "warning", layout: "topCenter", timeout: 1000 });
                }
                NProgress.done();
                Emergency.Map.MapTool.zoomToGeometry(xMin, xMax, yMin, yMax);
            }
        })
    })